// Copyright 2020 The Monogon Project Authors.
// SPDX-License-Identifier: Apache-2.0

package components

import (
	"crypto/hmac"
	"encoding/hex"
)

#GoogleAuth: {
	// Get credentials at https://console.cloud.google.com/apis/credentials
	clientID:     string
	clientSecret: string

	// List of 'employee' Google Workspace domains that can log in. Currently
	// this _must_ be set to at least one domain, as all authenticated users
	// get a set of basic 'employee' permissions that allows to run/cancel
	// builds. Thus, we want to prevent any external-but-logged-in user from
	// being granted these permissions.
	//
	// This approach to permissions might change in the future (and instead
	// non-employees might be allowed to log in, eg. open source contributors),
	// and then this requirement will be relaxed.
	restrictDomains: [string, ...string]
}

#Agent: {
	name: string
	// Name must be short enough and with a limited enough character set to
	// work as URL and potentially filesystem parts.
	name: =~"^[a-z0-9\\-_.]{1,16}$"

	// Secret used to provision agent against controller. Defaults to secret
	// generated from preconfigured controller HMAC key.
	secret: string | *hex.Encode(hmac.Sign("SHA256", config.agentSecret, name))

	// URL to download agent JAR from. Defaults to retrieving JAR from
	// controller.
	jarURL: string | *"https://\(config.publicHostname)/jnlpJars/agent.jar"

	// JNLP URL to connect agent JAR to. Defaults to standard URL for the
	// controller.
	jnlpURL: string | *"https://\(config.publicHostname)/computer/\(name)/jenkins-agent.jnlp"

	// Number of CPU cores available to the agent.
	cpus: int & >0 | *16
	// Gigabytes of memory available to the agent.
	// The agent always allocates one gigabyte of RAM for housekeeping, so this
	// has to be at least two gigabytes.
	memory: int & >1 | *16
}

// A Jenkins credential, currently always a username:password pair. This
// credential will be saved into the Jenkins Controller CasC YAML.
#Credential: {
	name:     =~"^[a-z0-9\\-]{3,16}$"
	username: string
	password: string
}

#Config: {
	images: {
		controller: "gcr.io/monogon-infra/jenkins-controller:2.289-centos7-5"
		agent:      "gcr.io/monogon-infra/jenkins-agent:monogon-builder-19c98c7be48005d26d813c66ff9d491a5b39375b"
	}

	// Hostname for Jenkins to run on (without https://)
	publicHostname: string

	// Internal hostname that agents will connect to via the Jenkins binary agent protocol.
	// If agents and controller run within the same Kubernetes service/DNS
	// fabric, this should be set to
	// "jenkins-controller.<controllernamespace>.svc.cluster.local".
	//
	// TODO(q3k): can we populate a default automatically? It doesn't seem like
	// we have access to the context's namespace, and the k8s objects available
	// in this scope don't have their namespace set...
	internalHostname: string

	// Wildcard domain to use for TLS termination
	publicDomain: string

	// Email address of Jenkins administrator. Currently unused, but in the
	// future might receive administrative emails.
	adminAddress: string

	// List of admin accounts, as Google account email addresses. These
	// accounts will have a permission to fully manage the Jenkins installation
	// at runtime. This permission shouldn't need to be exercised often, as all
	// configuration should be managed by code, and is more of a break-glass
	// procedure than anything else.
	admins: [...string]

	googleAuth: #GoogleAuth

	// 32 bytes of secret data used as HMAC key by the controller for
	// generating Agent secrets. This key is usually autogenerated by the
	// Jenkins controller and kept secret, but we override it on startup to the
	// configured value.
	//
	// This HMAC key is then used by Jenkins to generate secrets for Agents
	// (agentSecret = HMAC_SHA256(secret, agentName)). These secrets are used
	// by Agents to authenticate to the Controller, and we want to have these
	// secrets available within CUE to configure the agents.
	//
	// Thus, without sequencing the controller startup and retrieving data from
	// when it's running, we have no way of knowing these agent secrets other
	// than to preconfigure the key and replicate the HMAC secret derivation.
	agentSecret:        bytes
	_agentSecretLength: len(agentSecret) == 32
	_agentSecretLength: true

	// List of agents to run within the same namespace as the controller.
	agents: [...#Agent]

	// Credentials that should be available to the Jenkins Controller.
	credentials: [...#Credential]
}

config: #Config
